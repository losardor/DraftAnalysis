Argument: studying causality in a computer can help understand causality in the real world.


Causes and effects, when stated explicitly, wipe out surprise. When this happens, that happens. When this is, that comes to be. When we know that one thing entails another, we can’t be surprised about one leading to another.


Yet, surprise can happen when causes and consequences play out in a certain way. The mathematician John Conway came up with the cellular automata famously referred to as the game of life, freely inspired from the life of biological cells. It consists of a grid of cells which can be alive or dead, black or white. Step by step, the cells states are updated according to their neighbours’ states. A white (dead) cell surrounded by 3 live neighbours becomes live, as if the others had given birth to it. A black (live) cell that is surrounded by less than 2 or more than 3 live neighbours dies, as if by underpopulation or overpopulation. With these rules, the grid animates into a swarm of black cells on a white background, forming lasting structures that seem to be moving around, running into each other, disintegrating or creating. The complete set of causes and effects ruling this world are given to the observer, yet he or she is struct with astonishment.


Causal relationships between events can be be expressed as logical statements. When this happens, that happens. They create networks of events, some producing others. In the game of life, the existence of some live cells can result in that of another, which in turn may participate to the death or birth of yet another.


Computers are good at unfolding large sets of causes and effects. Computer programs are collections of such rules. If this condition is true, do this, otherwise do that. Computer programming is all about designing large sets of complicated relationship of causes and consequences and running them quickly.


The surprising dimension of causality that happens on a computer also happens outside a computer, such as in biological cells, ecosystems or societies. An example comes up when studying the segregation of people. 


There are many reasons why people can segregate by wealth, religion, or skin color. The economist Thomas Shelling revealed one of them using simulation. Human behaviour is too complex to put in a computer, but he made only a simple human. Imagine a grid where people can settle, and that there are only two kinds of people, red and green. Let's say that this imaginary world is much simpler than ours, and there is only one rule with which people will decide to stay were they are or move somewhere else. These people don't mind having different people aroind, but they want to have at least a few neighbours around them that are like them, say 3. If they don't they will move to another place, and will keep doing this until they are happy. The researcher wrote a program with these rules and observed that very quickly, the grid settles into segregated areas of red people with no green, and areas of green people without red. On average, people won’t have just 3 neighbours like them, but 7 (8?).
Thomas Schelling made the point that the collective production of a global state like segregation may have little to do with the hearts and minds of individuals.


This result does not entail that segregation in human society is produced by such a mechanism, but argues that this mechanism may play out in the real world. It suffices that people want to have some neighbours like them, and doesn’t require them to actively want global scale segregation.


The causality that is at play in the real world is too complex even for a computer, but a computer can replay a subset of it. Computers are the laboratory tools to study complex causality out there.